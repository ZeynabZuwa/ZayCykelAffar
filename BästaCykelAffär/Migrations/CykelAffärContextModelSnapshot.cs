// <auto-generated />
using System;
using BästaCykelAffär.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BästaCykelAffär.Migrations
{
    [DbContext(typeof(CykelAffärContext))]
    partial class CykelAffärContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BästaCykelAffär.Models.Cykel", b =>
                {
                    b.Property<int>("Cykel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cykeltyp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Däckstorlek_tum")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Färg")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Pris")
                        .HasColumnType("float");

                    b.Property<int>("Växlar")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Cykel_id");

                    b.ToTable("Cyklar");
                });

            modelBuilder.Entity("BästaCykelAffär.Models.CykelOrder", b =>
                {
                    b.Property<int>("CykelOrder_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cykel_id")
                        .HasColumnType("int");

                    b.Property<int?>("Cykel_id1")
                        .HasColumnType("int");

                    b.Property<int>("Order_id")
                        .HasColumnType("int");

                    b.Property<int?>("Order_id1")
                        .HasColumnType("int");

                    b.HasKey("CykelOrder_id");

                    b.HasIndex("Cykel_id1");

                    b.HasIndex("Order_id1");

                    b.ToTable("CyklarOrdrar");
                });

            modelBuilder.Entity("BästaCykelAffär.Models.Kund", b =>
                {
                    b.Property<int>("Kund_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Efternamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Förnamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gatuadress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ort")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Postnummer")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int>("Telefonnummer")
                        .HasMaxLength(12)
                        .HasColumnType("int");

                    b.HasKey("Kund_id");

                    b.ToTable("Kunder");
                });

            modelBuilder.Entity("BästaCykelAffär.Models.Order", b =>
                {
                    b.Property<int>("Order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kund_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Order_gjord")
                        .HasColumnType("datetime2");

                    b.Property<double>("Total_price")
                        .HasColumnType("float");

                    b.HasKey("Order_id");

                    b.HasIndex("Kund_id");

                    b.ToTable("Ordrar");
                });

            modelBuilder.Entity("BästaCykelAffär.Models.CykelOrder", b =>
                {
                    b.HasOne("BästaCykelAffär.Models.Cykel", "Cykel")
                        .WithMany()
                        .HasForeignKey("Cykel_id1");

                    b.HasOne("BästaCykelAffär.Models.Order", "Order")
                        .WithMany("CyklarOrdrar")
                        .HasForeignKey("Order_id1");

                    b.Navigation("Cykel");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BästaCykelAffär.Models.Order", b =>
                {
                    b.HasOne("BästaCykelAffär.Models.Kund", "Kund")
                        .WithMany("Ordrar")
                        .HasForeignKey("Kund_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kund");
                });

            modelBuilder.Entity("BästaCykelAffär.Models.Kund", b =>
                {
                    b.Navigation("Ordrar");
                });

            modelBuilder.Entity("BästaCykelAffär.Models.Order", b =>
                {
                    b.Navigation("CyklarOrdrar");
                });
#pragma warning restore 612, 618
        }
    }
}
